generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"
  // Uses connection pooling
  url = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}
 
model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum UserRole {
  USER
  ADMIN
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  address       String?
  image         String?
  phone       String?
  role         UserRole @default (USER)
  accounts      Account[]
 
  @@map("users")
}
model VerificationToken {
  id         String    @id @default(cuid())
  email      String    
  token      String    @unique
  expires    DateTime
  @@unique([email, token])
}
model Store{
  id         String @id @default(uuid())
  name       String
userId     String
createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
}
